[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum code coverage percentage (70% target)
# This will be enforced in CI/CD pipeline
addopts =
    --verbose
    --strict-markers
    --cov=src
    --cov=main
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=70
    -ra

# Markers for organizing tests (for future use)
markers =
    unit: Unit tests
    integration: Integration tests
    api: Tests requiring API calls
    slow: Slow running tests

# Coverage configuration
[coverage:run]
source = src,main.py
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov
